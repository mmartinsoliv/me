[["Map",1,2,7,8],"meta::meta",["Map",3,4,5,6],"astro-version","5.12.2","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://example.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","blog",["Map",9,10,27,28],"first-post",{"id":9,"data":11,"body":16,"filePath":17,"digest":18,"rendered":19,"legacyId":26},{"title":12,"description":13,"pubDate":14,"heroImage":15},"First post","Lorem ipsum dolor sit amet","Jul 23 2025","../../assets/blog-placeholder-1.jpg","Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae ultricies leo integer malesuada nunc vel risus commodo viverra. Adipiscing enim eu turpis egestas pretium. Euismod elementum nisi quis eleifend quam adipiscing. In hac habitasse platea dictumst vestibulum. Sagittis purus sit amet volutpat. Netus et malesuada fames ac turpis egestas. Eget magna fermentum iaculis eu non diam phasellus vestibulum lorem. Varius sit amet mattis vulputate enim. Habitasse platea dictumst quisque sagittis. Integer quis auctor elit sed vulputate mi. Dictumst quisque sagittis purus sit amet.\n\nMorbi tristique senectus et netus. Id semper risus in hendrerit gravida rutrum quisque non tellus. Habitasse platea dictumst quisque sagittis purus sit amet. Tellus molestie nunc non blandit massa. Cursus vitae congue mauris rhoncus. Accumsan tortor posuere ac ut. Fringilla urna porttitor rhoncus dolor. Elit ullamcorper dignissim cras tincidunt lobortis. In cursus turpis massa tincidunt dui ut ornare lectus. Integer feugiat scelerisque varius morbi enim nunc. Bibendum neque egestas congue quisque egestas diam. Cras ornare arcu dui vivamus arcu felis bibendum. Dignissim suspendisse in est ante in nibh mauris. Sed tempus urna et pharetra pharetra massa massa ultricies mi.\n\nMollis nunc sed id semper risus in. Convallis a cras semper auctor neque. Diam sit amet nisl suscipit. Lacus viverra vitae congue eu consequat ac felis donec. Egestas integer eget aliquet nibh praesent tristique magna sit amet. Eget magna fermentum iaculis eu non diam. In vitae turpis massa sed elementum. Tristique et egestas quis ipsum suspendisse ultrices. Eget lorem dolor sed viverra ipsum. Vel turpis nunc eget lorem dolor sed viverra. Posuere ac ut consequat semper viverra nam. Laoreet suspendisse interdum consectetur libero id faucibus. Diam phasellus vestibulum lorem sed risus ultricies tristique. Rhoncus dolor purus non enim praesent elementum facilisis. Ultrices tincidunt arcu non sodales neque. Tempus egestas sed sed risus pretium quam vulputate. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus ornare. Fringilla urna porttitor rhoncus dolor purus non. Amet dictum sit amet justo donec enim.\n\nMattis ullamcorper velit sed ullamcorper morbi tincidunt. Tortor posuere ac ut consequat semper viverra. Tellus mauris a diam maecenas sed enim ut sem viverra. Venenatis urna cursus eget nunc scelerisque viverra mauris in. Arcu ac tortor dignissim convallis aenean et tortor at. Curabitur gravida arcu ac tortor dignissim convallis aenean et tortor. Egestas tellus rutrum tellus pellentesque eu. Fusce ut placerat orci nulla pellentesque dignissim enim sit amet. Ut enim blandit volutpat maecenas volutpat blandit aliquam etiam. Id donec ultrices tincidunt arcu. Id cursus metus aliquam eleifend mi.\n\nTempus quam pellentesque nec nam aliquam sem. Risus at ultrices mi tempus imperdiet. Id porta nibh venenatis cras sed felis eget velit. Ipsum a arcu cursus vitae. Facilisis magna etiam tempor orci eu lobortis elementum. Tincidunt dui ut ornare lectus sit. Quisque non tellus orci ac. Blandit libero volutpat sed cras. Nec tincidunt praesent semper feugiat nibh sed pulvinar proin gravida. Egestas integer eget aliquet nibh praesent tristique magna.","src/content/blog/first-post.md","47c7d57e5fe14cc0",{"html":20,"metadata":21},"\u003Cp>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae ultricies leo integer malesuada nunc vel risus commodo viverra. Adipiscing enim eu turpis egestas pretium. Euismod elementum nisi quis eleifend quam adipiscing. In hac habitasse platea dictumst vestibulum. Sagittis purus sit amet volutpat. Netus et malesuada fames ac turpis egestas. Eget magna fermentum iaculis eu non diam phasellus vestibulum lorem. Varius sit amet mattis vulputate enim. Habitasse platea dictumst quisque sagittis. Integer quis auctor elit sed vulputate mi. Dictumst quisque sagittis purus sit amet.\u003C/p>\n\u003Cp>Morbi tristique senectus et netus. Id semper risus in hendrerit gravida rutrum quisque non tellus. Habitasse platea dictumst quisque sagittis purus sit amet. Tellus molestie nunc non blandit massa. Cursus vitae congue mauris rhoncus. Accumsan tortor posuere ac ut. Fringilla urna porttitor rhoncus dolor. Elit ullamcorper dignissim cras tincidunt lobortis. In cursus turpis massa tincidunt dui ut ornare lectus. Integer feugiat scelerisque varius morbi enim nunc. Bibendum neque egestas congue quisque egestas diam. Cras ornare arcu dui vivamus arcu felis bibendum. Dignissim suspendisse in est ante in nibh mauris. Sed tempus urna et pharetra pharetra massa massa ultricies mi.\u003C/p>\n\u003Cp>Mollis nunc sed id semper risus in. Convallis a cras semper auctor neque. Diam sit amet nisl suscipit. Lacus viverra vitae congue eu consequat ac felis donec. Egestas integer eget aliquet nibh praesent tristique magna sit amet. Eget magna fermentum iaculis eu non diam. In vitae turpis massa sed elementum. Tristique et egestas quis ipsum suspendisse ultrices. Eget lorem dolor sed viverra ipsum. Vel turpis nunc eget lorem dolor sed viverra. Posuere ac ut consequat semper viverra nam. Laoreet suspendisse interdum consectetur libero id faucibus. Diam phasellus vestibulum lorem sed risus ultricies tristique. Rhoncus dolor purus non enim praesent elementum facilisis. Ultrices tincidunt arcu non sodales neque. Tempus egestas sed sed risus pretium quam vulputate. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus ornare. Fringilla urna porttitor rhoncus dolor purus non. Amet dictum sit amet justo donec enim.\u003C/p>\n\u003Cp>Mattis ullamcorper velit sed ullamcorper morbi tincidunt. Tortor posuere ac ut consequat semper viverra. Tellus mauris a diam maecenas sed enim ut sem viverra. Venenatis urna cursus eget nunc scelerisque viverra mauris in. Arcu ac tortor dignissim convallis aenean et tortor at. Curabitur gravida arcu ac tortor dignissim convallis aenean et tortor. Egestas tellus rutrum tellus pellentesque eu. Fusce ut placerat orci nulla pellentesque dignissim enim sit amet. Ut enim blandit volutpat maecenas volutpat blandit aliquam etiam. Id donec ultrices tincidunt arcu. Id cursus metus aliquam eleifend mi.\u003C/p>\n\u003Cp>Tempus quam pellentesque nec nam aliquam sem. Risus at ultrices mi tempus imperdiet. Id porta nibh venenatis cras sed felis eget velit. Ipsum a arcu cursus vitae. Facilisis magna etiam tempor orci eu lobortis elementum. Tincidunt dui ut ornare lectus sit. Quisque non tellus orci ac. Blandit libero volutpat sed cras. Nec tincidunt praesent semper feugiat nibh sed pulvinar proin gravida. Egestas integer eget aliquet nibh praesent tristique magna.\u003C/p>",{"headings":22,"localImagePaths":23,"remoteImagePaths":24,"frontmatter":11,"imagePaths":25},[],[],[],[],"first-post.md","browser",{"id":27,"data":29,"body":33,"filePath":34,"digest":35,"rendered":36,"legacyId":56},{"title":30,"description":31,"pubDate":32,"heroImage":15},"Getting the Browser Default Font Size","A reliable method to detect and adapt to user font size preferences in web applications.","Jul 24 2025","Many users adjust their browser's default font size for better readability. As developers, respecting these preferences is crucial for accessibility and user experience.\n\nHere's a reliable method to detect the browser's default font size using CSS and JavaScript.\n\n## The CSS Foundation\n\nFirst, create an element with the `medium` keyword, which always corresponds to the browser's default font size:\n\n```css\n.measure-element {\n  font-size: medium;\n  position: absolute;\n  visibility: hidden;\n  white-space: nowrap;\n}\n```\n\nThe `medium` keyword is specialâ€”it's not affected by parent elements or CSS resets, making it the most reliable way to access the true browser default.\n\n## Reading the Value with JavaScript\n\nOnce the element is styled, we can measure it programmatically:\n\n```javascript\n// Create and append the measuring element\nconst measureElement = document.createElement('div');\nmeasureElement.className = 'measure-element';\nmeasureElement.textContent = 'M'; // Use a character for measurement\ndocument.body.appendChild(measureElement);\n\n// Get the computed font size\nconst fontSize = parseInt(getComputedStyle(measureElement).fontSize, 10);\n\n// Clean up\ndocument.body.removeChild(measureElement);\n\nconsole.log(`Default font size: ${fontSize}px`);\n```\n\n## Why This Matters\n\nDifferent users have different needs:\n\n- **Default (16px)**: Most users keep this setting\n- **Large (20px)**: Users who prefer slightly larger text  \n- **Very Large (24px)**: Users with vision difficulties or high-DPI displays\n\nBy detecting and respecting these preferences, your application becomes more accessible and user-friendly.\n\n## Practical Applications\n\nUse this technique to:\n\n- Scale UI components proportionally to font size\n- Adjust spacing and layout based on user preferences\n- Ensure consistent relative sizing across different devices\n- Build truly responsive designs that adapt to accessibility settings\n\nThis approach ensures your web application respects user preferences while maintaining visual harmony across different font size settings.","src/content/blog/browser.md","84fadbb7731c129f",{"html":37,"metadata":38},"\u003Cp>Many users adjust their browserâ€™s default font size for better readability. As developers, respecting these preferences is crucial for accessibility and user experience.\u003C/p>\n\u003Cp>Hereâ€™s a reliable method to detect the browserâ€™s default font size using CSS and JavaScript.\u003C/p>\n\u003Ch2 id=\"the-css-foundation\">The CSS Foundation\u003C/h2>\n\u003Cp>First, create an element with the \u003Ccode>medium\u003C/code> keyword, which always corresponds to the browserâ€™s default font size:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.measure-element\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  font-size\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">medium\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">absolute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  visibility\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">hidden\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  white-space\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">nowrap\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The \u003Ccode>medium\u003C/code> keyword is specialâ€”itâ€™s not affected by parent elements or CSS resets, making it the most reliable way to access the true browser default.\u003C/p>\n\u003Ch2 id=\"reading-the-value-with-javascript\">Reading the Value with JavaScript\u003C/h2>\n\u003Cp>Once the element is styled, we can measure it programmatically:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Create and append the measuring element\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> measureElement\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> document.\u003C/span>\u003Cspan style=\"color:#B392F0\">createElement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'div'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">measureElement.className \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'measure-element'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">measureElement.textContent \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'M'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Use a character for measurement\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">document.body.\u003C/span>\u003Cspan style=\"color:#B392F0\">appendChild\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(measureElement);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Get the computed font size\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> fontSize\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> parseInt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">getComputedStyle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(measureElement).fontSize, \u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Clean up\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">document.body.\u003C/span>\u003Cspan style=\"color:#B392F0\">removeChild\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(measureElement);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`Default font size: ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">fontSize\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}px`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"why-this-matters\">Why This Matters\u003C/h2>\n\u003Cp>Different users have different needs:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Default (16px)\u003C/strong>: Most users keep this setting\u003C/li>\n\u003Cli>\u003Cstrong>Large (20px)\u003C/strong>: Users who prefer slightly larger text\u003C/li>\n\u003Cli>\u003Cstrong>Very Large (24px)\u003C/strong>: Users with vision difficulties or high-DPI displays\u003C/li>\n\u003C/ul>\n\u003Cp>By detecting and respecting these preferences, your application becomes more accessible and user-friendly.\u003C/p>\n\u003Ch2 id=\"practical-applications\">Practical Applications\u003C/h2>\n\u003Cp>Use this technique to:\u003C/p>\n\u003Cul>\n\u003Cli>Scale UI components proportionally to font size\u003C/li>\n\u003Cli>Adjust spacing and layout based on user preferences\u003C/li>\n\u003Cli>Ensure consistent relative sizing across different devices\u003C/li>\n\u003Cli>Build truly responsive designs that adapt to accessibility settings\u003C/li>\n\u003C/ul>\n\u003Cp>This approach ensures your web application respects user preferences while maintaining visual harmony across different font size settings.\u003C/p>",{"headings":39,"localImagePaths":53,"remoteImagePaths":54,"frontmatter":29,"imagePaths":55},[40,44,47,50],{"depth":41,"slug":42,"text":43},2,"the-css-foundation","The CSS Foundation",{"depth":41,"slug":45,"text":46},"reading-the-value-with-javascript","Reading the Value with JavaScript",{"depth":41,"slug":48,"text":49},"why-this-matters","Why This Matters",{"depth":41,"slug":51,"text":52},"practical-applications","Practical Applications",[],[],[],"browser.md"]